# !------------------------------------
# @@@ LINUX
# !------------------------------------
# Force terminal to recognize changes to .zshrc
alias refresh="source ~/.zshrc"
alias fresh="refresh"

# Clear terminal
alias c="clear"

alias ll="ls -la"

# Ask before removing files
alias rm="rm -i"

# Update and Upgrade
alias uu='sudo apt update && sudo apt upgrade -y'

# Create a user
alias adduser='sudo adduser $1'

# Remove a user
alias deluser='sudo deluser --remove-home $1'

# Create a group
alias addgroup='sudo usermod -aG $1 $2'

# Remove a group
alias delgroup='sudo usermod -G $1 $2'

# Search history. Example usage: `histg git` to recent commands that use git
alias histg="history | grep"

# Remove Package
alias rmdpkg='sudo apt-get --purge remove $1'

# Make all files in ~/scripts executable
alias exscripts='chmod +x ~/scripts/*'

# Copy SSH Key to remote server
alias sshcopy="ssh-copy-id -i ~/.ssh/id_ed25519.pub -p 22 $1"



# !------------------------------------
# @@@ CHANGE DIRECTORIES
# !------------------------------------
alias home="cd ~/"
alias github="cd ~/github"
alias aclu-emails="cd ~/github/PaleBluDot/aclu-emails"
alias cspell-dictionaries="cd ~/github/PaleBluDot/cspell-dictionaries"
alias lint-config="cd ~/github/PaleBluDot/lint-config"
alias psd="cd ~/github/PaleBluDot/website"
alias publications="cd ~/github/American-Technion-Society/publications"
alias ats-emails="cd ~/github/American-Technion-Society/email-templates"
alias ats="cd ~/github/American-Technion-Society/purple"
alias tasteink="cd ~/github/taste-ink/tasteink.studio"
alias sshd="cd /etc/ssh"

function mkprj {
	echo "Selected org:"
	select org in $(exec ls ~/github)

	do
		echo "You selected $org"
		echo "Name of the project?"
		read project
		mkdir ~/github/$org/$project
		cd ~/github/$org/$project
		git init
		code-insiders .
		echo "Project created in ~/github/$org/$project"
		break;
	done
}


# !------------------------------------
# @@@ FILE EDITS
# !------------------------------------
# Edit aliases
alias edit="code ~/.aliases"

# Configure Static IP
alias netcfg='sudo nano /etc/netplan/50-cloud-init.yaml'

# Configure Hostname
alias cloudcfg='sudo nano /etc/cloud/cloud.cfg'

# See Groups
alias group='cat /etc/group'



# !------------------------------------
# @@@ GIT
# !------------------------------------
alias gs="git status"
alias s="git status -s"
alias gbs="git status -bs"
alias clone="git clone"
alias gnit="git init"
alias gcm="git commit -m"
alias amend="git commit --amend --no-edit"
alias ga="git add"
alias gaa="git add ."
alias push="git push"
alias pushup="git push -u origin main"
alias pull="git pull"
alias nb="git checkout -b"
alias switch="git switch"
alias save="gaa && gcm \"chore: save point\""
alias incom="gaa && gcm \"initial commit\""
alias cached="git rm -r --cached"

function delete {
	# Branch name present?
	if [[ -z "$1" ]]; then
			echo "\n ~T Oops… you forgot to provide the branch name"
			echo " ~I E.g. gbdel branch_name\n"
	else
			# Start deleteing.
			echo "\n⏳ Deleting…\n"
			git branch -D "$1" # Local delete.
			git push origin --delete "$1" # Remote delete.
			echo "\n✅ Git branch $1 was deleted from local and remote.\n"
	fi
}



# !------------------------------------
# @@@ NPM
# !------------------------------------
alias toi="npm init --scope=@taste-ink --init-author-email=pavel@tasteink.me -y"
alias npmi="npm init"
alias npmiy="npm init -y"
alias build="npm run build"
alias dev="npm run dev"
alias start="npm run start"
alias commit="npm run commit"
alias clean-node="rm -rf ./node_modules && rm -rf package-lock.json"

# Create a Husky script
function husky {
	echo "\n⏳ Creating…\n"
	npx husky add .husky/"$1" "$2" # Local delete.
	echo "\n✅ Husky script has been created.\n"
}



# !------------------------------------
# @@@ GET INFO
# !------------------------------------
# Get your current IP
alias myip="curl http://ipecho.net/plain; echo"
alias localip="ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'"


# !------------------------------------
# @@@ OS SPECIFIC
# !------------------------------------
# Open VSCode Insiders
alias code="code-insiders"

# Use teach user data
alias teach="code-insiders --extensions-dir ~/code_profiles/teach/exts --user-data-dir ~/code_profiles/teach/data"



# !------------------------------------
# @@@ GOTCHAS
# !------------------------------------
alias get="git"
alias got="git"
alias sudp="sudo"